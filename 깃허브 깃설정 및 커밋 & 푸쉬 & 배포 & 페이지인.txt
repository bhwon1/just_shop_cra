깃허브 깃설정 및 커밋 & 푸쉬 & 배포 & 페이지인

깃허브 사이트 
1. 웹브라우저 열기 - 깃허브 로그인 
2. 리파지토리 만들기 repository

로컬 프로젝트 작업위치 
3. 경로이동 (경로 확인 ls -la )

4. 깃설정

git init

5. 깃설정 목록확인
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:20  .git/

6. 깃환경설정 (git config)

사용자 이름 
사용자 이메일 

git config user.name 'bhwon1'
git config user.email 'blm2094@naver.com'

화면청소
clear

확인하기
git config user.name 
git config user.email

////////////////////////////////// 
깃허브 원격지 리파지토리(저장소) 주소 추가 지정 origin(url)

git remote add origin  https://github.com/bhwon1/react_cra_justshop.git 

넣기

원격지 리파지토리(저장소) 주소 확인하기 

git remote -v / 쳐서 확인하기 

origin  https://github.com/bhwon1/react_cra_justshop.git (fetch)
origin  https://github.com/bhwon1/react_cra_justshop.git (push)

주소확인 이상 없음

만약에 잘못된 주소면 삭제하기

git remote remove origin

git remote -v / 확인하기

다시 깃허브 원격지 리파지토리(저장소) 주소 추가 지정 origin(url)

git remote add origin  https://github.com/bhwon1/react_cra_justshop.git 
넣기

git remote -v / 쳐서 확인하기 

/////////////////////////////////////////////////////////////////////////////////
스테이징 

모든(all = . )파일 스테이징(올리기)
git add .

/////////////////////////////////////////////////////////////////////////////////
커밋 하기 (- 는 전부 옵션이다.)
-m : message

git commit -m '리액트 Create-react-app 으로 저장한 저스트쇼핑몰'

/////////////////////////////////////////////////////////////////////////////////
푸쉬하기(push) gkrl
git push origin master 


////////////////////////////////////////////////////////////
웹페이지 / 파일수정

다시 푸쉬 
git add .
git commit -m '리액트 Create-react-app 으로 저장한 저스트쇼핑몰 확장자 수정 jsx'
git push origin master


///////////////////////////////////////////////////////////
배포하기 (페이징)

1. 상단메뉴 Settiing 클릭 
2. 좌측 중간 하단에 Pages 메뉴 클리 
3. 우측에 GitHub Pages
4. Branch
GitHub Pages is currently disabled. Select a source below to enable GitHub Pages for this repository. Learn more.

5. None 클릭 tp셀렉트 박스 열리면 
  master 선택한다 
  우측 save 클릭한다. 

5. 새로고침 
ctrl shift R
캐시까지 삭제하는 새로고침 

https://bhwon1.github.io/react_cra_justshop/

30~1분 대기

6. Depolyment => Github Pages

중간아래 
Github Pages 로 내려온다 


Step 1: Add homepage to package.json
/////////////////////////////////////////////
package.json => 깃허브 배포주소 속성과 주소 찾기 
/////////////////////////////////////////////

포트폴리오 프로젝트 
package.json 에디터에서 연다 

맨 아래쪽에 추가한다.
"homepage": "https://myusername.github.io/my-app"



Step 2: Install gh-pages and add deploy to scripts in package.json
/////////////////////////////////////////////
gh-pages => npm i gh-pages 설치 (배포를 도와주는 것)
            npm install --save gh-pages
/////////////////////////////////////////////



Step 3: Deploy the site by running npm run deploy
/////////////////////////////////////////////
npm run deploy
/////////////////////////////////////////////




 빌드하기 
npm run build



//////////////////////////////////////////////////////////
원본 소스만 올리기 

기존 주소 삭제 
git remote remove origin

삭제한 주소 확인 
git remote -v

rltgjqm dn
git remote add origin  https://github.com/bhwon1/just_shop_cra.git

주소 들어간지 주소 확인
git remote -v
origin  https://github.com/bhwon1/just_shop_cra.git (fetch)
origin  https://github.com/bhwon1/just_shop_cra.git (push)

